#!/bin/bash
###########################################################
# This is the primary script for running WRF a the        #
# Raspberry Pi.                                           #
#                                                         #
# Eliott-Foust wefoust@ucar.edu                           #
###########################################################
clear
#Setting Paths
export wrf_basis=$(readlink -f $(dirname $(basename $0)))
export wrf_basis=$(cd $wrf_basis/../../ && pwd)
export wrf_path=$wrf_basis/WRF_System


#Run a script to clean old files
$wrf_basis/Setup/Set_Environment
$wrf_path/lib/cleanwrf >& /dev/null


userstartdate=11-29-2020-18
userenddate=11-30-2020-00

currentdate=`date +%m-%d-%Y-%H`
user_date_convert1=$(date +%s -d "${userstartdate:6:4}-${userstartdate:0:2}-${userstartdate:3:2} ${userstartdate:11:2}:00:00")
user_date_convert2=$(date +%s -d "${userenddate:6:4}-${userenddate:0:2}-${userenddate:3:2} ${userenddate:11:2}:00:00")

#add if running online
days_past=$(( ($currentdate - $user_date_convert1) / 60 / 60 / 24 ))
run_hours_total=$(( ($user_date_convert2 - $user_date_convert1) / 60 / 60 ))

# Update start and end date in WPS and WRF namelists
sed -i "/start_date/c\ start_date = \'${userstartdate:6:4}-${userstartdate:0:5}_${userstartdate:11:2}:00:00\'," $wrf_path/WPS/namelist.wps
sed -i "/end_date/c\ end_date   = \'${userenddate:6:4}-${userenddate:0:5}_${userenddate:11:2}:00:00\'," $wrf_path/WPS/namelist.wps

sed -i "/run_hours/c\ run_hours    = $run_hours_total" $wrf_path/WRFV3/run/namelist.input 

sed -i "/start_year/c\ start_year    = ${userstartdate:6:4}" $wrf_path/WRFV3/run/namelist.input 
sed -i "/start_month/c\ start_month    = ${userstartdate:0:2}" $wrf_path/WRFV3/run/namelist.input 
sed -i "/start_day/c\ start_day    = ${userstartdate:3:2}" $wrf_path/WRFV3/run/namelist.input
sed -i "/start_hour/c\ start_hour    = ${userstartdate:11:2}" $wrf_path/WRFV3/run/namelist.input 

sed -i "/end_year/c\ end_year    = ${userenddate:6:4}" $wrf_path/WRFV3/run/namelist.input
sed -i "/end_month/c\ end_month    = ${userenddate:0:2}" $wrf_path/WRFV3/run/namelist.input 
sed -i "/end_day/c\ end_day    = ${userenddate:3:2}" $wrf_path/WRFV3/run/namelist.input
sed -i "/end_hour/c\ end_hour    = ${userenddate:11:2}" $wrf_path/WRFV3/run/namelist.input

sed -i "/geog_data_path/c\geog_data_path='$wrf_path/lib/WPS_GEOG'" $wrf_path/WPS/namelist.wps 

# Setting wrfout times
if [ $run_hours_total -le 24 ]; then
    sed -i "/history_interval/c\\history_interval=60" /pi-wrf/WRF_System/WRFV3/run/namelist.input
    nhrs='1'

elif [ $run_hours_total -gt 24 && -le 48 ]; then
    sed -i "/history_interval/c\\history_interval=120" /pi-wrf/WRF_System/WRFV3/run/namelist.input
    nhrs='2'
elif [ $run_hours_total -gt 48 && -le 72 ]; then
    sed -i "/history_interval/c\\history_interval=180" /pi-wrf/WRF_System/WRFV3/run/namelist.input
    nhrs='3'
else
    sed -i "/history_interval/c\\history_interval=660" /pi-wrf/WRF_System/WRFV3/run/namelist.input
    nhrs='6'
fi

# Clear previous output if it exists
rm /pi-wrf/Output/*.png
rm /pi-wrf/Output/*.gif
rm /pi-wrf/Output/user_saved_files/*.png
rm /pi-wrf/Output/Temp_WRF_Output
#Download input file starting from 12z to 12z at  6-hour incraments for one day
rm $wrf_path/lib/DATA/*
cd $wrf_path/lib/DATA/ 
for i in `seq 0 6 $run_hours_total`; do 
	boundary_condition=$(printf %03d $i)
	echo
	echo Downloading boundary condition for forecast hour $boundary_condition
	wget -q https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/gfs.\
${userstartdate:6:4}${userstartdate:0:2}${userstartdate:3:2}/${userstartdate:11:2}/atmos/gfs.t\
${userstartdate:11:2}z.pgrb2.1p00.f$boundary_condition \ 
$wrf_path/lib/DATA/
done


#Move Back to WPS Directory
cd $wrf_path/WPS/
$wrf_path/WPS/geogrid.exe
$wrf_path/WPS/link_grib.csh $wrf_path/lib/DATA/
ln -sf ungrib/Variable_Tables/Vtable.GFS Vtable
./ungrib.exe
./metgrid.exe

#Modify met_em files such that missing values are corrected
for f in  met_em*.nc
do
	ncap2 -s 'where(SM100200>1 || SM100200<-1) SM100200=1.' $f -O $f
	ncap2 -s 'where(SM000010>1 || SM000010<-1) SM000010=1.' $f -O $f
	ncap2 -s 'where(SM010040>1 || SM010040<-1) SM010040=1.' $f -O $f
	ncap2 -s 'where(SM040100>1 || SM040100<-1) SM040100=1.' $f -O $f
	ncap2 -s 'where(ST100200>10000 || ST100200<-10000) ST100200=285' $f -O $f
        ncap2 -s 'where(ST000010>10000 || ST000010<-10000) ST000010=285' $f -O $f
        ncap2 -s 'where(ST010040>10000 || ST010040<-10000) ST010040=285' $f -O $f
        ncap2 -s 'where(ST040100>10000 || ST040100<-10000) ST040100=285' $f -O $f
	ncap2 -s 'where(ST>10000 || ST<-10000) ST=285' $f -O $f
done


echo
echo Initializing Model
echo 

#Move to WRFV3's run directory to initialize model
cd $wrf_path/WRFV3/run
ln -sf $wrf_path/WPS/met_em*.nc .
./real.exe

echo
echo Running WRF
echo 


#Run WRF
export OMP_NUM_THREADS=4
./wrf.exe
#mpirun -np 4./wrf.exe
clear
echo
echo
echo

#Move and Rename output
mv wrfout_d01_"${userstartdate:6:4}-${userstartdate:0:2}-${userstartdate:3:2}_${userstartdate:11:2}:00:00" \
$wrf_basis/Output/Temp_WRF_Output

#Run Plotting Scripts
echo Plotting Surface Temperatures
ncl -Q  /pi-wrf/WRF_System/lib/Plotting_Scripts/temperature.ncl &>/dev/null

echo Plotting Precipitation
ncl -Q hrly=$nhrs /pi-wrf/WRF_System/lib/Plotting_Scripts/rain.ncl &>/dev/null

echo Plotting Snow Depth
ncl -Q  /pi-wrf/WRF_System/lib/Plotting_Scripts/snow.ncl &>/dev/null

echo Plotting Surface Winds
ncl -Q  /pi-wrf/WRF_System/lib/Plotting_Scripts/wind.ncl &>/dev/null

echo Plotting Reference Domains
ncl -Q  /pi-wrf/WRF_System/lib/Plotting_Scripts/Plot_Domain &>/dev/null
ncl -Q  /pi-wrf/WRF_System/lib/Plotting_Scripts/Plot_Domain_Relative &>/dev/null

